###
The last 20 offers in maindata area asyn load
base class
@author dongming.jidm
@date 2012-12-26
###

(($) ->
	win = window
	QU = Qingguo.Utility

	defConfigs = {}
	defConfigs.otherParam = {}
	defConfigs.otherParam.data = {}

	class AsynOffer
		constructor: (configs) ->
			defConfigs.url = configs.url
			AsynOffer.collectParam()
			defConfigs.otherParam.data.showStyle = configs.showStyle
			defConfigs.otherParam.success = @successCallBack
			defConfigs.otherParam.error = @failCallBack

		sendARequest: =>
			QU.getRPCJsonp(defConfigs.url, defConfigs.otherParam)
			return
		successCallBack: ( data ) =>
			@renderData(data)
			Sandbox.notify(Qingguo.Config.Events.imgLazyLoadInit,null)
			return
		failCallBack: =>
			# console.log "wrong data"
		###
		need to be rerwote in new class
		###
		renderData: ( data ) =>

		###
		collect the parameters for request
		###
		@collectParam: ->

			formInput = $("#pageNavForm").serializeArray()
			# console.log formInput
			requestData = {}
			for item in formInput
				requestData[item.name] = item.value
				
			# console.log defConfigs.url
			###
			only need one screen loading
			###
			requestData.loadCount = 1
			if win.asynConfig?
					requestData.industry = win.asynConfig.industry
					requestData.beginPage = win.asynConfig.navigationPage

			defConfigs.otherParam.data = requestData
			return

		run: =>
			@sendARequest()
			return

	Qingguo.Business.AsynOffer = AsynOffer;

) jQuery



